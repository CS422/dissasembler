00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 5/2/2017 1:40:38 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7  op0100      
00000000                             8  
00000000                             9  
00000000                            10   
00000000                            11              ;CMP.W   #$4EB9,D6   ;see if it's a JSR
00000000                            12              ;BEQ     jumpToRt            
00000000                            13              ;CMP.W   #$4E75,D6   ;see if it's a RTS
00000000                            14              ;BEQ     returnRt 
00000000                            15             
00000000                            16  * determine if contents in D3 are a word or long ---------- 
00000000                            17              ;JSR     WorL        
00000000                            18  * ---------------------------------------------------------
00000000                            19              ;CMP.B   #hex7,D3    ;see if it's a LEA
00000000                            20              ;BEQ     _lea        ;branch 
00000000                            21              
00000000                            22  * determine if contents in D3 are either CLR or MOVEM ----- 
00000000                            23              ;JSR     clrORmm       
00000000                            24  * ---------------------------------------------------------
00000000                            25              ;CMP.B   #hex8,D3    ;see if it's a CLR.B
00000000                            26              ;BEQ     _clrB       ;branch             
00000000                            27              ;CMP.B   #hex9,D3    ;see if it's a CLR.W
00000000                            28              ;BEQ     _clrW       ;branch   
00000000                            29              ;CMP.B   #hexA,D3    ;see if it's a CLR.L
00000000                            30              ;BEQ     _clrL       ;branch
00000000                            31    
00000000                            32              ;CMP.B   #hex2,D3    ;see if it's a MOVEM.W
00000000                            33              ;BEQ     _movemW     ;branch   
00000000                            34              ;CMP.B   #hex3,D3    ;see if it's a MOVEM.L
00000000                            35              ;BEQ     _movemL     ;branch              
00000000                            36                          
00000000                            37              ;BRA     opError     ;bad opcode branch to error
00000000                            38              
00000000                            39              
00000000  BC7C 4E71                 40              CMP.W   #$4E71,D6
00000004  6700 000A                 41              BEQ     _NOP
00000008                            42              
00000008  BC7C 4E75                 43              CMP.W   #$4E75,D6   ;see if it's a RTS
0000000C  6700 0028                 44              BEQ     _RTS        branch to RTS
00000010                            45             
00000010                            46  
00000010                            47              
00000010                            48  _NOP
00000010  7E02                      49              MOVE.L  #2,D7       ;data is not error
00000012  14FC 0020                 50              MOVE.B  #' ',(A2)+      ;print spaces
00000016  14FC 0020                 51              MOVE.B  #' ',(A2)+      ;print spaces
0000001A  14FC 0020                 52              MOVE.B  #' ',(A2)+      ;print spaces
0000001E  14FC 0020                 53              MOVE.B  #' ',(A2)+      ;print spaces
00000022  14FC 004E                 54              MOVE.B  #'N',(A2)+      ;print N
00000026  14FC 004F                 55              MOVE.B  #'O',(A2)+      ;print O
0000002A  14FC 0050                 56              MOVE.B  #'P',(A2)+      ;print P
0000002E  1A3C 0003                 57              MOVE.B  #3,D5           ;counter for output
Line 58 ERROR: Undefined symbol
00000032  6000 BB5A                 58              BRA     printCode
00000036                            59  
00000036                            60  _RTS    
00000036  7E02                      61              MOVE.L  #2,D7       ;data is not error
00000038  14FC 0020                 62              MOVE.B  #' ',(A2)+      ;print spaces
0000003C  14FC 0020                 63              MOVE.B  #' ',(A2)+      ;print spaces
00000040  14FC 0020                 64              MOVE.B  #' ',(A2)+      ;print spaces
00000044  14FC 0020                 65              MOVE.B  #' ',(A2)+      ;print spaces
00000048  14FC 0052                 66              MOVE.B  #'R',(A2)+      ;print R
0000004C  14FC 0054                 67              MOVE.B  #'T',(A2)+      ;print T
00000050  14FC 0053                 68              MOVE.B  #'S',(A2)+      ;print S
00000054  1A3C 0003                 69              MOVE.B  #3,D5           ;counter for output
Line 70 ERROR: Undefined symbol
00000058  6000 BB34                 70              BRA     printCode
Line 71 WARNING: END directive missing, starting address not set

2 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
OP0100              0
_NOP                10
_RTS                36
