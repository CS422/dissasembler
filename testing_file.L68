00000996 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 2017-05-30 ¿ÀÈÄ 11:43:50

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000996                             7      ORG    $996
00000996                             8  *------
00000996                             9  *Test memory address between 996 and 9CF
00000996                            10  *
00000996                            11  *
00000996                            12  *----
00000996                            13  START:                  ; first instruction of progr
00000996                            14  *        DIVU.W  D1,D2
00000996                            15  *        DIVU.W  #$3456,D3
00000996                            16  *        DIVU.W  $4304,D4
00000996                            17  *        OR.B    #4,D3
00000996                            18  *        OR.W    #$42,D1
00000996                            19  *        OR.L    $A000,D7
00000996                            20  *        OR.B    D3,D4
00000996  8378 0043                 21          OR.W    D1,$43
0000099A  8FB9 0000A000             22          OR.L    D7,$A000
000009A0                            23  *    MOVEM.W     D1-D3,(A1)
000009A0                            24  *       BRA     _01
000009A0                            25  *       CMP    #1,D0
000009A0                            26  *       BCC      _02
000009A0                            27  *       BLT      _02
000009A0                            28  *       BGE      _01
000009A0                            29  *_01 
000009A0                            30  *       MOVE.B   D1,D2
000009A0                            31  *       BRA     _02
000009A0                            32  *_02        
000009A0                            33  *      LEA    (A1),A2
000009A0                            34  *      LEA    $A000,A5
000009A0                            35  *     JSR    (A0)
000009A0                            36  *     JSR    $4214
000009A0                            37  *     JSR    $A000
000009A0                            38  *    MOVE.W  $A000,D1
000009A0                            39  *    MOVE.W  D0,D1
000009A0                            40  *    MOVE.w  $4563,D0
000009A0                            41  *    MOVE.w  D0,D1
000009A0                            42  *    MOVE.w  #34,D1
000009A0                            43  *    MOVE.w  D0,D1
000009A0                            44  *    MOVE.l  $A000,D1
000009A0                            45  *    MOVE.l  D0,D1
000009A0                            46  *    MOVE.l  $4563,D0
000009A0                            47  *    MOVE.l  D0,D1
000009A0                            48  *    MOVE.l  #34,D1
000009A0                            49  *    MOVE.l  D0,D1
000009A0                            50  * Put program code here
000009A0                            51  *----------------------------------------------------------
000009A0                            52  * Testing:  4MSB opcode 0001 => MOVE.B and MOVEA.B 
000009A0                            53  *----------------------------------------------------------
000009A0                            54  * Direct Addressing
000009A0                            55  *----------------------------------------------------------
000009A0                            56  *    MOVE.B  D0,D1       ; Testing Dn
000009A0                            57  *    MOVE.B  D0,D2       ; Testing Dn
000009A0                            58  **   MOVE.B  A0,D1       ; Testing An
000009A0                            59  *----------------------------------------------------------
000009A0                            60  * Indriect Addressing
000009A0                            61  *----------------------------------------------------------
000009A0                            62  *    MOVE.B  (A1),D7     ; Testing  (An)
000009A0                            63  *    MOVE.B  (A2),D7     ; Testing  (An)
000009A0                            64  *    MOVE.B  (A3),D7     ; Testing  (An)
000009A0                            65  *    MOVE.B  (A4),D7     ; Testing  (An)
000009A0                            66  *----------------------------------------------------------
000009A0                            67  * Indriect Addressing with Post Increment 
000009A0                            68  *----------------------------------------------------------
000009A0                            69  *    MOVE.B  (A7)+,D3     ; Testing  (An)+
000009A0                            70  *    MOVE.B  (A6)+,D5     ; Testing  (An)+
000009A0                            71  *----------------------------------------------------------
000009A0                            72  * Indriect Addressing with Pre Decrement
000009A0                            73  *----------------------------------------------------------
000009A0                            74  *    MOVE.B  -(A5),D4     ; Testing  -(An)
000009A0                            75  *    MOVE.B  -(A5),D4     ; Testing  -(An)
000009A0                            76  *----------------------------------------------------------
000009A0                            77  * Immediate Data
000009A0                            78  *----------------------------------------------------------
000009A0                            79  *   MOVE.B  #34,D4 
000009A0                            80  *     MOVE.B  #99,D5        
000009A0                            81  *----------------------------------------------------------
000009A0                            82  * Absolute Addressing - Word
000009A0                            83  *----------------------------------------------------------
000009A0                            84  *     MOVE.B  $4214,D5
000009A0                            85  *----------------------------------------------------------
000009A0                            86  * Absolute Addressing - Long
000009A0                            87  *----------------------------------------------------------
000009A0                            88      * MOVE.B   $A000,D5
000009A0                            89  *----------------------------------------------------------
000009A0                            90  * end of opcode 0001
000009A0                            91  *----------------------------------------------------------
000009A0                            92  *----------------------------------------------------------
000009A0                            93  * Testing:  4MSB opcode 0011 => MOVE.W and MOVEA.W
000009A0                            94  *----------------------------------------------------------
000009A0                            95  * Direct Addressing
000009A0                            96  *----------------------------------------------------------
000009A0                            97  *   MOVE.W   D0,D1       ; Testing Dn
000009A0                            98  *   MOVEA.W  A0,A1       ; Testing An
000009A0                            99  
000009A0                           100  *    MOVE.B  D0,D2       ; Testing Dn
000009A0                           101  **   MOVE.B  A0,D1       ; Testing An
000009A0                           102  *----------------------------------------------------------
000009A0                           103  * Indriect Addressing
000009A0                           104  *----------------------------------------------------------
000009A0                           105  *    MOVE.B  (A1),D7     ; Testing  (An)
000009A0                           106  *    MOVE.B  (A2),D7     ; Testing  (An)
000009A0                           107  *    MOVE.B  (A3),D7     ; Testing  (An)
000009A0                           108  *    MOVE.B  (A4),D7     ; Testing  (An)
000009A0                           109  *----------------------------------------------------------
000009A0                           110  * Indriect Addressing with Post Increment 
000009A0                           111  *----------------------------------------------------------
000009A0                           112  *    MOVE.B  (A7)+,D3     ; Testing  (An)+
000009A0                           113  *    MOVE.B  (A6)+,D5     ; Testing  (An)+
000009A0                           114  *----------------------------------------------------------
000009A0                           115  * Indriect Addressing with Pre Decrement
000009A0                           116  *----------------------------------------------------------
000009A0                           117  *    MOVE.B  -(A5),D4     ; Testing  -(An)
000009A0                           118  *    MOVE.B  -(A5),D4     ; Testing  -(An)
000009A0                           119  *----------------------------------------------------------
000009A0                           120  * Immediate Data
000009A0                           121  *----------------------------------------------------------
000009A0                           122  *   MOVE.B  #34,D4 
000009A0                           123  *     MOVE.B  #99,D5        
000009A0                           124  *----------------------------------------------------------
000009A0                           125  * Absolute Addressing - Word
000009A0                           126  *----------------------------------------------------------
000009A0                           127      * MOVE.B  $4214,D5
000009A0                           128  *----------------------------------------------------------
000009A0                           129  * Absolute Addressing - Long
000009A0                           130  *----------------------------------------------------------
000009A0                           131      * MOVE.B   $A000,D5
000009A0                           132  *----------------------------------------------------------
000009A0                           133  * end of opcode 0001
000009A0                           134  *----------------------------------------------------------
000009A0                           135  *----------------------------------------------------------
000009A0                           136  * Testing:  4MSB opcode 0010 => MOVE.L and MOVEA.L
000009A0                           137  *----------------------------------------------------------
000009A0                           138  * Direct Addressing
000009A0                           139  *----------------------------------------------------------
000009A0                           140  *   MOVE.L   D0,D1       ; Testing Dn
000009A0                           141  *   MOVEA.L  A0,A1       ; Testing An
000009A0                           142  
000009A0                           143  *    MOVE.B  D0,D2       ; Testing Dn
000009A0                           144  **   MOVE.B  A0,D1       ; Testing An
000009A0                           145  *----------------------------------------------------------
000009A0                           146  * Indriect Addressing
000009A0                           147  *----------------------------------------------------------
000009A0                           148  *    MOVE.B  (A1),D7     ; Testing  (An)
000009A0                           149  *    MOVE.B  (A2),D7     ; Testing  (An)
000009A0                           150  *    MOVE.B  (A3),D7     ; Testing  (An)
000009A0                           151  *    MOVE.B  (A4),D7     ; Testing  (An)
000009A0                           152  *----------------------------------------------------------
000009A0                           153  * Indriect Addressing with Post Increment 
000009A0                           154  *----------------------------------------------------------
000009A0                           155  *    MOVE.B  (A7)+,D3     ; Testing  (An)+
000009A0                           156  *    MOVE.B  (A6)+,D5     ; Testing  (An)+
000009A0                           157  *----------------------------------------------------------
000009A0                           158  * Indriect Addressing with Pre Decrement
000009A0                           159  *----------------------------------------------------------
000009A0                           160  *    MOVE.B  -(A5),D4     ; Testing  -(An)
000009A0                           161  *    MOVE.B  -(A5),D4     ; Testing  -(An)
000009A0                           162  *----------------------------------------------------------
000009A0                           163  * Immediate Data
000009A0                           164  *----------------------------------------------------------
000009A0                           165  *   MOVE.B  #34,D4 
000009A0                           166  *     MOVE.B  #99,D5        
000009A0                           167  *----------------------------------------------------------
000009A0                           168  * Absolute Addressing - Word
000009A0                           169  *----------------------------------------------------------
000009A0                           170      * MOVE.B  $4214,D5
000009A0                           171  *----------------------------------------------------------
000009A0                           172  * Absolute Addressing - Long
000009A0                           173  *----------------------------------------------------------
000009A0                           174      * MOVE.B   $A000,D5
000009A0                           175  *----------------------------------------------------------
000009A0                           176  * end of opcode 0001
000009A0                           177  *----------------------------------------------------------    
000009A0                           178  *-------------------------------------
000009A0                           179  *   ADD
000009A0                           180  *------------------------
000009A0                           181  *     ADDA.W   #$13,A6
000009A0                           182  *     ADDA.W   $4902,A2
000009A0                           183  *     ADDA.L   $0000A902,A2
000009A0                           184  *    ADDA.L  D5,A5
000009A0                           185  *    ADDA.W  D2,A7
000009A0                           186  **    
000009A0                           187  *    MOVE.B  #34,D5
000009A0                           188  *    MOVE.B  D6,D7           
000009A0                           189  *    ADDA.W  #34,A5
000009A0                           190  *    MOVE.B  #$22,D5
000009A0                           191       ;ADD     #$5,D5 ;ADDQ
000009A0                           192      
000009A0                           193      *MOVE.B   #$22,D5
000009A0                           194  *    ADD.B   #$12,D1
000009A0                           195  *    ADD.W   #$3400,D1
000009A0                           196  *    ADD.L   #$1000A000,D1
000009A0                           197  *    ADD.B   D6,D5
000009A0                           198      
000009A0                           199  *- BROken below, the buffer (A3) will not print the regnum 7, not sure why
000009A0                           200  *    ADD.W   A5,D6
000009A0                           201  ** why does it print out wrong if i print multiple opcodes 
000009A0                           202  * 
000009A0                           203  *    ADD.L   D7,D4
000009A0                           204  **    
000009A0                           205  *;ISSUE (A3)/(A2) does not correctly print to the console if there are more than 1 OPCODE
000009A0                           206  *    ADD.W   D6,D2
000009A0                           207  *    ADD.L   D7,D1    
000009A0                           208  **    
000009A0                           209  *    ADD.W   D2,(A2)+
000009A0                           210  **    SUB.W   (A5),D6
000009A0                           211  **    SUB.L   D1,D0
000009A0                           212  **
000009A0                           213  *    ADD.L   D5,(A4)+
000009A0                           214  *
000009A0                           215  *    SUB.B   D2,D6
000009A0                           216  *- immediate data prints 45 which is HEX equalivent of 69(decimal)
000009A0                           217  *-idea convert from decimal to hex to ascii
000009A0                           218  *    MOVEQ   #69,D2
000009A0                           219  *    
000009A0                           220  *    ADD.W   D2,D7
000009A0                           221  *    ADD.L   D4,D5
000009A0                           222      
000009A0                           223  *    MOVE.W  D1,D2
000009A0                           224  *    MOVE.W  $8964,D4
000009A0                           225  *    
000009A0                           226  *     ADD.W  D2,D5
000009A0                           227      
000009A0                           228  *    ADDI.L    #$50,d0
000009A0                           229  *    ADDI.B  #$66,D7
000009A0                           230  *    ADDI.W  #$999,D1
000009A0                           231  *    
000009A0                           232  *    ADDQ.B  #$7,D7
000009A0                           233  *    ADDQ.W  #$3,D2
000009A0                           234  *    
000009A0                           235  *    ADDQ.L  #8,D4
000009A0                           236      
000009A0                           237  *    SUBQ.B  #5,D1
000009A0                           238  *    ROR.B   #$3,D1
000009A0                           239  *    ROR.B   #2,D7
000009A0                           240  *    ROR.B   D1,D2
000009A0                           241  *    
000009A0                           242  *    ROR.W   #5,D2
000009A0                           243  *    ROR.W   D2,D7
000009A0                           244  *    ROR.W   #$8,D4
000009A0                           245  *    
000009A0                           246  *    ROR.L   D2,D7
000009A0                           247  *    
000009A0                           248  *    ROR.L   #$5,D2
000009A0                           249  *    ROR.L   #8,D0
000009A0                           250  *    
000009A0                           251  *    ROL.B   #4,D1
000009A0                           252  *    ROL.B   D0,D7
000009A0                           253  *    ROL.B   #8,D0
000009A0                           254  *    
000009A0                           255  *    ROL.W   #$5,D6
000009A0                           256  *    ROL.W   #2,D5
000009A0                           257  *    ROL.W   #$8,D5
000009A0                           258  *    
000009A0                           259  *    ROL.L   #6,D6
000009A0                           260  *    ROL.L   #8,D7
000009A0                           261      
000009A0                           262  *    ASR.B     #8,D2
000009A0                           263  *    
000009A0                           264  *    *    ROR.B   #$3,D1
000009A0                           265  *    ASR.B   #2,D7
000009A0                           266  *    ASR.B   D1,D2
000009A0                           267  *    
000009A0                           268  *    ASR.W   #5,D2
000009A0                           269  *    ASR.W   D2,D7
000009A0                           270  *    ASR.W   #$8,D4
000009A0                           271  *    
000009A0                           272  *    ASR.L   D2,D7
000009A0                           273  *    
000009A0                           274  *    ASR.L   #$5,D2
000009A0                           275  *    ASR.L   #8,D0
000009A0                           276  *    
000009A0                           277  *    ASR.B   #4,D1
000009A0                           278  *    ASR.B   D0,D7
000009A0                           279  *    ASR.B   #8,D0
000009A0                           280  *    
000009A0                           281  *    ASR.W   #$5,D6
000009A0                           282  *    ASR.W   #2,D5
000009A0                           283  *    ASR.W   #$8,D5
000009A0                           284  *    
000009A0                           285  *    ASR.L   #6,D6
000009A0                           286  *    ASR.L   #8,D7
000009A0                           287  *    
000009A0                           288  *    LSL.B   #$8,D2
000009A0                           289  *    LSL.B   #4,D0
000009A0                           290  *    
000009A0                           291  *    LSL.W   #8,D2
000009A0                           292  *    LSL.W   #$7,D7
000009A0                           293  *    LSL.W   D2,D1
000009A0                           294  *    
000009A0                           295  *    LSL.L   #6,D2
000009A0                           296  *    LSL.L   D4,D6
000009A0                           297  *    LSL.L   #$6,D7
000009A0                           298  *    
000009A0                           299  *    
000009A0                           300  *
000009A0                           301  *    LSR.B   #5,D2
000009A0                           302  *    LSL.B   #5,D2
000009A0                           303  *    LSR.W   #5,D6
000009A0                           304  *    LSR.L   #5,D2
000009A0                           305  *    
000009A0                           306  *
000009A0                           307  *    LSR.B   D2,D3
000009A0                           308  *    LSR.W   D1,D3
000009A0                           309  *    LSR.L   D6,D7
000009A0                           310  
000009A0                           311  
000009A0                           312  
000009A0                           313  *-***********************************************************
000009A0                           314      
000009A0                           315      ;LEA     MESSAGE1,A1 *Loads message into address register A1
000009A0                           316      ;MOVE.B  #14,D0      *Moves number 14 into data regiter D0
000009A0                           317      ;TRAP    #15         *Displays Message
000009A0                           318     
000009A0                           319      ;LEA     inputbuffer,A1   ; Where to store input string
000009A0                           320      ;MOVE.B  #2,D0       ; from keyboard to store into input buffer Read string
000009A0                           321      ;TRAP    #15         ;execute the task
000009A0                           322  
000009A0                           323  
000009A0                           324      ;LEA test_buffer,A1  ;LOAD THE LOCATION where THIS STRING WILL BE PUT INTO
000009A0                           325      ; MOVE.B  #' ',(A1)+  ENTER space
000009A0                           326      ;MOVE.B  #' ',(A1)+  ENTER space
000009A0                           327      ;MOVE.B  #'D',(A1)+  load D
000009A0                           328      ;MOVE.B  #'A',(A1)+  load A
000009A0                           329      ;MOVE.B  #'N',(A1)+  Load N
000009A0                           330      ;MOVE.B  #'N',(A1)+  Load N    
000009A0                           331      ;MOVE.B  #'Y',(A1)+  Load Y
000009A0                           332      ; MOVE.B  #' ',(A1)+  ENTER space
000009A0                           333      ;  MOVE.B  #' ',(A1)+  ENTER space
000009A0                           334      ;   MOVE.B  #' ',(A1)+  ENTER space
000009A0                           335      
000009A0                           336      ;LEA     MESSAGE2,A1 *Loads message into address register A1
000009A0                           337      ;MOVE.B  #13,D0      *Moves number 14 into data regiter D0
000009A0                           338      ;TRAP    #15         *Displays Message
000009A0                           339  
000009A0                           340      ;LEA     test_buffer,A1   ;NOT SINCE THE STRING IS STORED AT THE BUFFER WHICH IS A LOCATIOIN FOR THE STRING TO LIVE is LOADED
000009A0                           341                              ; BACK INTO A1 for the trap task to execute what sin a1 String 
000009A0                           342      ;MOVE.B  #13,D0      ; Display string with newline
000009A0                           343      ;TRAP    #15
000009A0                           344  
000009A0                           345      ;MOVE.B   #9,D0
000009A0                           346      ;TRAP   #15          ; halt simulator
000009A0                           347     
000009A0                           348  ;    ds.w    0       ; force even address
000009A0                           349  ;buffer  ds.b    80  ; input string storage
000009A0                           350  
000009A0                           351  *    LEA     MSG,A1
000009A0                           352  *    MOVE.B  #14, D0
000009A0                           353  *    TRAP    #15
000009A0                           354      
000009A0                           355      
000009A0                           356  *    MOVE.B  #2,D0
000009A0                           357  *    TRAP    #15
000009A0                           358   
000009A0                           359  *    MOVEA.W $300,A2
000009A0                           360  *    MOVE.W  D1,D2   THE INPUT IS STORED INTO D1 WE MOVE IT TO D2
000009A0                           361      
000009A0                           362  *    MOVE.W  D2,(A2)
000009A0                           363      
000009A0                           364      
000009A0                           365      
000009A0                           366  
000009A0                           367      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
START               996
