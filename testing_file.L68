00000998 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/27/2017 9:26:53 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000998                             7      ORG    $998
00000998  =0000000D                  8  CR  EQU $0D
00000998  =0000000A                  9  LF  EQU $0A
00000998                            10  *------
00000998                            11  *Test memory address between 996 and 9CF
00000998                            12  *
00000998                            13  *
00000998                            14  *----
00000998                            15  START:                  ; first instruction of program
00000998                            16      
00000998                            17  * Put program code here
00000998                            18      
00000998                            19      
00000998  4E71                      20      NOP
0000099A                            21      
0000099A  4E71                      22      NOP
0000099C  4E71                      23      NOP
0000099E                            24   
0000099E                            25      
0000099E                            26      
0000099E                            27      
0000099E                            28      
0000099E                            29      
0000099E                            30      
0000099E                            31      
0000099E                            32      ;LEA     MESSAGE1,A1 *Loads message into address register A1
0000099E                            33      ;MOVE.B  #14,D0      *Moves number 14 into data regiter D0
0000099E                            34      ;TRAP    #15         *Displays Message
0000099E                            35     
0000099E                            36      ;LEA     inputbuffer,A1   ; Where to store input string
0000099E                            37      ;MOVE.B  #2,D0       ; from keyboard to store into input buffer Read string
0000099E                            38      ;TRAP    #15         ;execute the task
0000099E                            39  
0000099E                            40  
0000099E                            41      ;LEA test_buffer,A1  ;LOAD THE LOCATION where THIS STRING WILL BE PUT INTO
0000099E                            42      ; MOVE.B  #' ',(A1)+  ENTER space
0000099E                            43      ;MOVE.B  #' ',(A1)+  ENTER space
0000099E                            44      ;MOVE.B  #'D',(A1)+  load D
0000099E                            45      ;MOVE.B  #'A',(A1)+  load A
0000099E                            46      ;MOVE.B  #'N',(A1)+  Load N
0000099E                            47      ;MOVE.B  #'N',(A1)+  Load N    
0000099E                            48      ;MOVE.B  #'Y',(A1)+  Load Y
0000099E                            49      ; MOVE.B  #' ',(A1)+  ENTER space
0000099E                            50      ;  MOVE.B  #' ',(A1)+  ENTER space
0000099E                            51      ;   MOVE.B  #' ',(A1)+  ENTER space
0000099E                            52      
0000099E                            53      ;LEA     MESSAGE2,A1 *Loads message into address register A1
0000099E                            54      ;MOVE.B  #13,D0      *Moves number 14 into data regiter D0
0000099E                            55      ;TRAP    #15         *Displays Message
0000099E                            56  
0000099E                            57      ;LEA     test_buffer,A1   ;NOT SINCE THE STRING IS STORED AT THE BUFFER WHICH IS A LOCATIOIN FOR THE STRING TO LIVE is LOADED
0000099E                            58                              ; BACK INTO A1 for the trap task to execute what sin a1 String 
0000099E                            59      ;MOVE.B  #13,D0      ; Display string with newline
0000099E                            60      ;TRAP    #15
0000099E                            61  
0000099E                            62      ;MOVE.B   #9,D0
0000099E                            63      ;TRAP   #15          ; halt simulator
0000099E                            64     
0000099E= 65 6E 74 65 72 20 ...     65  message1 dc.b 'enter your string: ',0
000009B2= 73 74 72 69 6E 67 ...     66  message2 dc.b 'string you have entered is: ',0
000009D0                            67  test_buffer ds.w    85    
00000A7A                            68  ;    ds.w    0       ; force even address
00000A7A                            69  ;buffer  ds.b    80  ; input string storage
00000A7A                            70  
00000A7A                            71  *    LEA     MSG,A1
00000A7A                            72  *    MOVE.B  #14, D0
00000A7A                            73  *    TRAP    #15
00000A7A                            74      
00000A7A                            75      
00000A7A                            76  *    MOVE.B  #2,D0
00000A7A                            77  *    TRAP    #15
00000A7A                            78   
00000A7A                            79  *    MOVEA.W $300,A2
00000A7A                            80  *    MOVE.W  D1,D2   THE INPUT IS STORED INTO D1 WE MOVE IT TO D2
00000A7A                            81      
00000A7A                            82  *    MOVE.W  D2,(A2)
00000A7A                            83      
00000A7A                            84      
00000A7A                            85      
00000A7A                            86      
00000A7A  FFFF FFFF                 87      SIMHALT             ; halt simulator
00000A7E                            88  
00000A7E                            89  * Put variables and constants here
00000A7E                            90  ;MSG     DC.L    'ENTER A NUMBER: ',0
00000A7E                            91  inputbuffer    ds.w    9999  input string storage
0000589C                            92  
0000589C                            93      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CR                  D
INPUTBUFFER         A7E
LF                  A
MESSAGE1            99E
MESSAGE2            9B2
START               998
TEST_BUFFER         9D0
